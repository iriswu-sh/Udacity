the usage of format

message = "Somebody who is {} years old will pay ${} to ride the bus.".format(age,ticket_price)
 
 

True 和 False 都是布尔值，但不建议使用 if True: 或 if False:。

布尔运算符 and、or 以及 not 具有不同于它们常见含义的具体含义 - 不要陷入编写英文字面意义的陷阱，除非这些词也是有效的 Python！

不要将布尔值变量与 == True 或 == False 比较 —— 避免这种比较，可提高代码的可读性。如果要检查布尔值是否为 False，可以使用 not，例如

if not real_grail:

  print("It's a grail-shaped beacon!")
  
  


任何为 0 的数字、一个是 None 的对象或一个空字符串将具有 False 真值。
任何未被列为具有真值 False 的对象将被视为 True。

max_score = max(score1,score2,score3,score4,score5)
min_score = min(score1,score2,score3,score4,score5)


def convert_to_numeric(score):
    """
    Convert the score to a float.
    """
    converted_score = float(score)
    return converted_score

def sum_of_middle_three(score1,score2,score3,score4,score5):
    """
    Find the sum of the middle three numbers out of the five given.
    """
    max_score = max(score1,score2,score3,score4,score5)
    min_score = min(score1,score2,score3,score4,score5)
    sum = score1 + score2 + score3 + score4 + score5 - max_score - min_score
    return sum


def score_to_rating_string(av_score):
    """
    Convert the average score, which should be between 0 and 5, 
    into a rating.
    """
    if av_score < 1:
        rating = "Terrible"
    elif av_score < 2:
        rating = "Bad"
    elif av_score < 3:
        rating = "OK"
    elif av_score < 4:
        rating = "Good"
    else:          #Using else at the end, every possible case gets caught
        rating = "Excellent"
    return rating



scores_to_rating.py

def scores_to_rating(score1,score2,score3,score4,score5):
    """
    Turns five scores into a rating by averaging the
    middle three of the five scores and assigning this average
    to a written rating.
    """
    #STEP 1 convert scores to numbers
    score1 = convert_to_numeric(score1)
    score2 = convert_to_numeric(score2)
    score3 = convert_to_numeric(score3)
    score4 = convert_to_numeric(score4)
    score5 = convert_to_numeric(score5)

    #STEP 2 and STEP 3 find the average of the middle three scores
    average_score = sum_of_middle_three(score1,score2,score3,score4,score5)/3

    #STEP 4 turn average score into a rating
    rating = score_to_rating_string(average_score)

    return rating
